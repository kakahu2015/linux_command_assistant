name: ARM64 Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        required: true
        default: '0.1.0'

permissions:
  contents: write

jobs:
  build-and-release-arm64:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Install ARM64 toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: aarch64-unknown-linux-gnu
        override: true

    - name: Install cross-compilation tools
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-aarch64-linux-gnu

    - name: Build for ARM64
      uses: actions-rs/cargo@v1
      with:
        use-cross: true
        command: build
        args: --release --target aarch64-unknown-linux-gnu

    - name: Run tests for ARM64
      uses: actions-rs/cargo@v1
      with:
        use-cross: true
        command: test
        args: --release --target aarch64-unknown-linux-gnu

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.event.inputs.version }}-arm64
        release_name: Release ${{ github.event.inputs.version }} (ARM64)
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./target/aarch64-unknown-linux-gnu/release/linux_command_assistant
        asset_name: linux_command_assistant-${{ github.event.inputs.version }}-arm64
        asset_content_type: application/octet-stream
